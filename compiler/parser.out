Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> ID EQUALS expression
Rule 2     statement -> expression
Rule 3     expression -> NOT expression
Rule 4     expression -> expression NAND expression
Rule 5     expression -> expression AND expression
Rule 6     expression -> expression NOR expression
Rule 7     expression -> expression OR expression
Rule 8     expression -> expression NXOR expression
Rule 9     expression -> expression XOR expression
Rule 10    expression -> LPAREN expression RPAREN
Rule 11    expression -> LBRACE expression RBRACE
Rule 12    expression -> LBRACKET expression RBRACKET
Rule 13    expression -> BIN
Rule 14    expression -> INT
Rule 15    expression -> TRUE
Rule 16    expression -> FALSE
Rule 17    expression -> ID
Rule 18    expression -> expression AND
Rule 19    expression -> expression OR
Rule 20    expression -> expression XOR
Rule 21    expression -> expression NAND
Rule 22    expression -> expression NOR
Rule 23    expression -> expression NXOR

Terminals, with rules where they appear

AND                  : 5 18
BIN                  : 13
EQUALS               : 1
FALSE                : 16
ID                   : 1 17
INT                  : 14
LBRACE               : 11
LBRACKET             : 12
LPAREN               : 10
NAND                 : 4 21
NOR                  : 6 22
NOT                  : 3
NXOR                 : 8 23
OR                   : 7 19
RBRACE               : 11
RBRACKET             : 12
RPAREN               : 10
TRUE                 : 15
XOR                  : 9 20
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 4 4 5 5 6 6 7 7 8 8 9 9 10 11 12 18 19 20 21 22 23
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . ID EQUALS expression
    (2) statement -> . expression
    (3) expression -> . NOT expression
    (4) expression -> . expression NAND expression
    (5) expression -> . expression AND expression
    (6) expression -> . expression NOR expression
    (7) expression -> . expression OR expression
    (8) expression -> . expression NXOR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . LBRACE expression RBRACE
    (12) expression -> . LBRACKET expression RBRACKET
    (13) expression -> . BIN
    (14) expression -> . INT
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (17) expression -> . ID
    (18) expression -> . expression AND
    (19) expression -> . expression OR
    (20) expression -> . expression XOR
    (21) expression -> . expression NAND
    (22) expression -> . expression NOR
    (23) expression -> . expression NXOR

    ID              shift and go to state 2
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5
    LBRACE          shift and go to state 6
    LBRACKET        shift and go to state 7
    BIN             shift and go to state 8
    INT             shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    statement                      shift and go to state 1
    expression                     shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> ID . EQUALS expression
    (17) expression -> ID .

    EQUALS          shift and go to state 12
    NAND            reduce using rule 17 (expression -> ID .)
    AND             reduce using rule 17 (expression -> ID .)
    NOR             reduce using rule 17 (expression -> ID .)
    OR              reduce using rule 17 (expression -> ID .)
    NXOR            reduce using rule 17 (expression -> ID .)
    XOR             reduce using rule 17 (expression -> ID .)
    $end            reduce using rule 17 (expression -> ID .)


state 3

    (2) statement -> expression .
    (4) expression -> expression . NAND expression
    (5) expression -> expression . AND expression
    (6) expression -> expression . NOR expression
    (7) expression -> expression . OR expression
    (8) expression -> expression . NXOR expression
    (9) expression -> expression . XOR expression
    (18) expression -> expression . AND
    (19) expression -> expression . OR
    (20) expression -> expression . XOR
    (21) expression -> expression . NAND
    (22) expression -> expression . NOR
    (23) expression -> expression . NXOR

    $end            reduce using rule 2 (statement -> expression .)
    NAND            shift and go to state 13
    AND             shift and go to state 14
    NOR             shift and go to state 15
    OR              shift and go to state 16
    NXOR            shift and go to state 17
    XOR             shift and go to state 18


state 4

    (3) expression -> NOT . expression
    (3) expression -> . NOT expression
    (4) expression -> . expression NAND expression
    (5) expression -> . expression AND expression
    (6) expression -> . expression NOR expression
    (7) expression -> . expression OR expression
    (8) expression -> . expression NXOR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . LBRACE expression RBRACE
    (12) expression -> . LBRACKET expression RBRACKET
    (13) expression -> . BIN
    (14) expression -> . INT
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (17) expression -> . ID
    (18) expression -> . expression AND
    (19) expression -> . expression OR
    (20) expression -> . expression XOR
    (21) expression -> . expression NAND
    (22) expression -> . expression NOR
    (23) expression -> . expression NXOR

    NOT             shift and go to state 4
    LPAREN          shift and go to state 5
    LBRACE          shift and go to state 6
    LBRACKET        shift and go to state 7
    BIN             shift and go to state 8
    INT             shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    ID              shift and go to state 20

    expression                     shift and go to state 19

state 5

    (10) expression -> LPAREN . expression RPAREN
    (3) expression -> . NOT expression
    (4) expression -> . expression NAND expression
    (5) expression -> . expression AND expression
    (6) expression -> . expression NOR expression
    (7) expression -> . expression OR expression
    (8) expression -> . expression NXOR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . LBRACE expression RBRACE
    (12) expression -> . LBRACKET expression RBRACKET
    (13) expression -> . BIN
    (14) expression -> . INT
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (17) expression -> . ID
    (18) expression -> . expression AND
    (19) expression -> . expression OR
    (20) expression -> . expression XOR
    (21) expression -> . expression NAND
    (22) expression -> . expression NOR
    (23) expression -> . expression NXOR

    NOT             shift and go to state 4
    LPAREN          shift and go to state 5
    LBRACE          shift and go to state 6
    LBRACKET        shift and go to state 7
    BIN             shift and go to state 8
    INT             shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    ID              shift and go to state 20

    expression                     shift and go to state 21

state 6

    (11) expression -> LBRACE . expression RBRACE
    (3) expression -> . NOT expression
    (4) expression -> . expression NAND expression
    (5) expression -> . expression AND expression
    (6) expression -> . expression NOR expression
    (7) expression -> . expression OR expression
    (8) expression -> . expression NXOR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . LBRACE expression RBRACE
    (12) expression -> . LBRACKET expression RBRACKET
    (13) expression -> . BIN
    (14) expression -> . INT
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (17) expression -> . ID
    (18) expression -> . expression AND
    (19) expression -> . expression OR
    (20) expression -> . expression XOR
    (21) expression -> . expression NAND
    (22) expression -> . expression NOR
    (23) expression -> . expression NXOR

    NOT             shift and go to state 4
    LPAREN          shift and go to state 5
    LBRACE          shift and go to state 6
    LBRACKET        shift and go to state 7
    BIN             shift and go to state 8
    INT             shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    ID              shift and go to state 20

    expression                     shift and go to state 22

state 7

    (12) expression -> LBRACKET . expression RBRACKET
    (3) expression -> . NOT expression
    (4) expression -> . expression NAND expression
    (5) expression -> . expression AND expression
    (6) expression -> . expression NOR expression
    (7) expression -> . expression OR expression
    (8) expression -> . expression NXOR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . LBRACE expression RBRACE
    (12) expression -> . LBRACKET expression RBRACKET
    (13) expression -> . BIN
    (14) expression -> . INT
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (17) expression -> . ID
    (18) expression -> . expression AND
    (19) expression -> . expression OR
    (20) expression -> . expression XOR
    (21) expression -> . expression NAND
    (22) expression -> . expression NOR
    (23) expression -> . expression NXOR

    NOT             shift and go to state 4
    LPAREN          shift and go to state 5
    LBRACE          shift and go to state 6
    LBRACKET        shift and go to state 7
    BIN             shift and go to state 8
    INT             shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    ID              shift and go to state 20

    expression                     shift and go to state 23

state 8

    (13) expression -> BIN .

    NAND            reduce using rule 13 (expression -> BIN .)
    AND             reduce using rule 13 (expression -> BIN .)
    NOR             reduce using rule 13 (expression -> BIN .)
    OR              reduce using rule 13 (expression -> BIN .)
    NXOR            reduce using rule 13 (expression -> BIN .)
    XOR             reduce using rule 13 (expression -> BIN .)
    $end            reduce using rule 13 (expression -> BIN .)
    RPAREN          reduce using rule 13 (expression -> BIN .)
    RBRACE          reduce using rule 13 (expression -> BIN .)
    RBRACKET        reduce using rule 13 (expression -> BIN .)


state 9

    (14) expression -> INT .

    NAND            reduce using rule 14 (expression -> INT .)
    AND             reduce using rule 14 (expression -> INT .)
    NOR             reduce using rule 14 (expression -> INT .)
    OR              reduce using rule 14 (expression -> INT .)
    NXOR            reduce using rule 14 (expression -> INT .)
    XOR             reduce using rule 14 (expression -> INT .)
    $end            reduce using rule 14 (expression -> INT .)
    RPAREN          reduce using rule 14 (expression -> INT .)
    RBRACE          reduce using rule 14 (expression -> INT .)
    RBRACKET        reduce using rule 14 (expression -> INT .)


state 10

    (15) expression -> TRUE .

    NAND            reduce using rule 15 (expression -> TRUE .)
    AND             reduce using rule 15 (expression -> TRUE .)
    NOR             reduce using rule 15 (expression -> TRUE .)
    OR              reduce using rule 15 (expression -> TRUE .)
    NXOR            reduce using rule 15 (expression -> TRUE .)
    XOR             reduce using rule 15 (expression -> TRUE .)
    $end            reduce using rule 15 (expression -> TRUE .)
    RPAREN          reduce using rule 15 (expression -> TRUE .)
    RBRACE          reduce using rule 15 (expression -> TRUE .)
    RBRACKET        reduce using rule 15 (expression -> TRUE .)


state 11

    (16) expression -> FALSE .

    NAND            reduce using rule 16 (expression -> FALSE .)
    AND             reduce using rule 16 (expression -> FALSE .)
    NOR             reduce using rule 16 (expression -> FALSE .)
    OR              reduce using rule 16 (expression -> FALSE .)
    NXOR            reduce using rule 16 (expression -> FALSE .)
    XOR             reduce using rule 16 (expression -> FALSE .)
    $end            reduce using rule 16 (expression -> FALSE .)
    RPAREN          reduce using rule 16 (expression -> FALSE .)
    RBRACE          reduce using rule 16 (expression -> FALSE .)
    RBRACKET        reduce using rule 16 (expression -> FALSE .)


state 12

    (1) statement -> ID EQUALS . expression
    (3) expression -> . NOT expression
    (4) expression -> . expression NAND expression
    (5) expression -> . expression AND expression
    (6) expression -> . expression NOR expression
    (7) expression -> . expression OR expression
    (8) expression -> . expression NXOR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . LBRACE expression RBRACE
    (12) expression -> . LBRACKET expression RBRACKET
    (13) expression -> . BIN
    (14) expression -> . INT
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (17) expression -> . ID
    (18) expression -> . expression AND
    (19) expression -> . expression OR
    (20) expression -> . expression XOR
    (21) expression -> . expression NAND
    (22) expression -> . expression NOR
    (23) expression -> . expression NXOR

    NOT             shift and go to state 4
    LPAREN          shift and go to state 5
    LBRACE          shift and go to state 6
    LBRACKET        shift and go to state 7
    BIN             shift and go to state 8
    INT             shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    ID              shift and go to state 20

    expression                     shift and go to state 24

state 13

    (4) expression -> expression NAND . expression
    (21) expression -> expression NAND .
    (3) expression -> . NOT expression
    (4) expression -> . expression NAND expression
    (5) expression -> . expression AND expression
    (6) expression -> . expression NOR expression
    (7) expression -> . expression OR expression
    (8) expression -> . expression NXOR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . LBRACE expression RBRACE
    (12) expression -> . LBRACKET expression RBRACKET
    (13) expression -> . BIN
    (14) expression -> . INT
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (17) expression -> . ID
    (18) expression -> . expression AND
    (19) expression -> . expression OR
    (20) expression -> . expression XOR
    (21) expression -> . expression NAND
    (22) expression -> . expression NOR
    (23) expression -> . expression NXOR

    NAND            reduce using rule 21 (expression -> expression NAND .)
    AND             reduce using rule 21 (expression -> expression NAND .)
    NOR             reduce using rule 21 (expression -> expression NAND .)
    OR              reduce using rule 21 (expression -> expression NAND .)
    NXOR            reduce using rule 21 (expression -> expression NAND .)
    XOR             reduce using rule 21 (expression -> expression NAND .)
    $end            reduce using rule 21 (expression -> expression NAND .)
    RPAREN          reduce using rule 21 (expression -> expression NAND .)
    RBRACE          reduce using rule 21 (expression -> expression NAND .)
    RBRACKET        reduce using rule 21 (expression -> expression NAND .)
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5
    LBRACE          shift and go to state 6
    LBRACKET        shift and go to state 7
    BIN             shift and go to state 8
    INT             shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    ID              shift and go to state 20

    expression                     shift and go to state 25

state 14

    (5) expression -> expression AND . expression
    (18) expression -> expression AND .
    (3) expression -> . NOT expression
    (4) expression -> . expression NAND expression
    (5) expression -> . expression AND expression
    (6) expression -> . expression NOR expression
    (7) expression -> . expression OR expression
    (8) expression -> . expression NXOR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . LBRACE expression RBRACE
    (12) expression -> . LBRACKET expression RBRACKET
    (13) expression -> . BIN
    (14) expression -> . INT
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (17) expression -> . ID
    (18) expression -> . expression AND
    (19) expression -> . expression OR
    (20) expression -> . expression XOR
    (21) expression -> . expression NAND
    (22) expression -> . expression NOR
    (23) expression -> . expression NXOR

    NAND            reduce using rule 18 (expression -> expression AND .)
    AND             reduce using rule 18 (expression -> expression AND .)
    NOR             reduce using rule 18 (expression -> expression AND .)
    OR              reduce using rule 18 (expression -> expression AND .)
    NXOR            reduce using rule 18 (expression -> expression AND .)
    XOR             reduce using rule 18 (expression -> expression AND .)
    $end            reduce using rule 18 (expression -> expression AND .)
    RPAREN          reduce using rule 18 (expression -> expression AND .)
    RBRACE          reduce using rule 18 (expression -> expression AND .)
    RBRACKET        reduce using rule 18 (expression -> expression AND .)
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5
    LBRACE          shift and go to state 6
    LBRACKET        shift and go to state 7
    BIN             shift and go to state 8
    INT             shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    ID              shift and go to state 20

    expression                     shift and go to state 26

state 15

    (6) expression -> expression NOR . expression
    (22) expression -> expression NOR .
    (3) expression -> . NOT expression
    (4) expression -> . expression NAND expression
    (5) expression -> . expression AND expression
    (6) expression -> . expression NOR expression
    (7) expression -> . expression OR expression
    (8) expression -> . expression NXOR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . LBRACE expression RBRACE
    (12) expression -> . LBRACKET expression RBRACKET
    (13) expression -> . BIN
    (14) expression -> . INT
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (17) expression -> . ID
    (18) expression -> . expression AND
    (19) expression -> . expression OR
    (20) expression -> . expression XOR
    (21) expression -> . expression NAND
    (22) expression -> . expression NOR
    (23) expression -> . expression NXOR

    NAND            reduce using rule 22 (expression -> expression NOR .)
    AND             reduce using rule 22 (expression -> expression NOR .)
    NOR             reduce using rule 22 (expression -> expression NOR .)
    OR              reduce using rule 22 (expression -> expression NOR .)
    NXOR            reduce using rule 22 (expression -> expression NOR .)
    XOR             reduce using rule 22 (expression -> expression NOR .)
    $end            reduce using rule 22 (expression -> expression NOR .)
    RPAREN          reduce using rule 22 (expression -> expression NOR .)
    RBRACE          reduce using rule 22 (expression -> expression NOR .)
    RBRACKET        reduce using rule 22 (expression -> expression NOR .)
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5
    LBRACE          shift and go to state 6
    LBRACKET        shift and go to state 7
    BIN             shift and go to state 8
    INT             shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    ID              shift and go to state 20

    expression                     shift and go to state 27

state 16

    (7) expression -> expression OR . expression
    (19) expression -> expression OR .
    (3) expression -> . NOT expression
    (4) expression -> . expression NAND expression
    (5) expression -> . expression AND expression
    (6) expression -> . expression NOR expression
    (7) expression -> . expression OR expression
    (8) expression -> . expression NXOR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . LBRACE expression RBRACE
    (12) expression -> . LBRACKET expression RBRACKET
    (13) expression -> . BIN
    (14) expression -> . INT
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (17) expression -> . ID
    (18) expression -> . expression AND
    (19) expression -> . expression OR
    (20) expression -> . expression XOR
    (21) expression -> . expression NAND
    (22) expression -> . expression NOR
    (23) expression -> . expression NXOR

    NAND            reduce using rule 19 (expression -> expression OR .)
    AND             reduce using rule 19 (expression -> expression OR .)
    NOR             reduce using rule 19 (expression -> expression OR .)
    OR              reduce using rule 19 (expression -> expression OR .)
    NXOR            reduce using rule 19 (expression -> expression OR .)
    XOR             reduce using rule 19 (expression -> expression OR .)
    $end            reduce using rule 19 (expression -> expression OR .)
    RPAREN          reduce using rule 19 (expression -> expression OR .)
    RBRACE          reduce using rule 19 (expression -> expression OR .)
    RBRACKET        reduce using rule 19 (expression -> expression OR .)
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5
    LBRACE          shift and go to state 6
    LBRACKET        shift and go to state 7
    BIN             shift and go to state 8
    INT             shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    ID              shift and go to state 20

    expression                     shift and go to state 28

state 17

    (8) expression -> expression NXOR . expression
    (23) expression -> expression NXOR .
    (3) expression -> . NOT expression
    (4) expression -> . expression NAND expression
    (5) expression -> . expression AND expression
    (6) expression -> . expression NOR expression
    (7) expression -> . expression OR expression
    (8) expression -> . expression NXOR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . LBRACE expression RBRACE
    (12) expression -> . LBRACKET expression RBRACKET
    (13) expression -> . BIN
    (14) expression -> . INT
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (17) expression -> . ID
    (18) expression -> . expression AND
    (19) expression -> . expression OR
    (20) expression -> . expression XOR
    (21) expression -> . expression NAND
    (22) expression -> . expression NOR
    (23) expression -> . expression NXOR

    NAND            reduce using rule 23 (expression -> expression NXOR .)
    AND             reduce using rule 23 (expression -> expression NXOR .)
    NOR             reduce using rule 23 (expression -> expression NXOR .)
    OR              reduce using rule 23 (expression -> expression NXOR .)
    NXOR            reduce using rule 23 (expression -> expression NXOR .)
    XOR             reduce using rule 23 (expression -> expression NXOR .)
    $end            reduce using rule 23 (expression -> expression NXOR .)
    RPAREN          reduce using rule 23 (expression -> expression NXOR .)
    RBRACE          reduce using rule 23 (expression -> expression NXOR .)
    RBRACKET        reduce using rule 23 (expression -> expression NXOR .)
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5
    LBRACE          shift and go to state 6
    LBRACKET        shift and go to state 7
    BIN             shift and go to state 8
    INT             shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    ID              shift and go to state 20

    expression                     shift and go to state 29

state 18

    (9) expression -> expression XOR . expression
    (20) expression -> expression XOR .
    (3) expression -> . NOT expression
    (4) expression -> . expression NAND expression
    (5) expression -> . expression AND expression
    (6) expression -> . expression NOR expression
    (7) expression -> . expression OR expression
    (8) expression -> . expression NXOR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . LBRACE expression RBRACE
    (12) expression -> . LBRACKET expression RBRACKET
    (13) expression -> . BIN
    (14) expression -> . INT
    (15) expression -> . TRUE
    (16) expression -> . FALSE
    (17) expression -> . ID
    (18) expression -> . expression AND
    (19) expression -> . expression OR
    (20) expression -> . expression XOR
    (21) expression -> . expression NAND
    (22) expression -> . expression NOR
    (23) expression -> . expression NXOR

    NAND            reduce using rule 20 (expression -> expression XOR .)
    AND             reduce using rule 20 (expression -> expression XOR .)
    NOR             reduce using rule 20 (expression -> expression XOR .)
    OR              reduce using rule 20 (expression -> expression XOR .)
    NXOR            reduce using rule 20 (expression -> expression XOR .)
    XOR             reduce using rule 20 (expression -> expression XOR .)
    $end            reduce using rule 20 (expression -> expression XOR .)
    RPAREN          reduce using rule 20 (expression -> expression XOR .)
    RBRACE          reduce using rule 20 (expression -> expression XOR .)
    RBRACKET        reduce using rule 20 (expression -> expression XOR .)
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5
    LBRACE          shift and go to state 6
    LBRACKET        shift and go to state 7
    BIN             shift and go to state 8
    INT             shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    ID              shift and go to state 20

    expression                     shift and go to state 30

state 19

    (3) expression -> NOT expression .
    (4) expression -> expression . NAND expression
    (5) expression -> expression . AND expression
    (6) expression -> expression . NOR expression
    (7) expression -> expression . OR expression
    (8) expression -> expression . NXOR expression
    (9) expression -> expression . XOR expression
    (18) expression -> expression . AND
    (19) expression -> expression . OR
    (20) expression -> expression . XOR
    (21) expression -> expression . NAND
    (22) expression -> expression . NOR
    (23) expression -> expression . NXOR

    NAND            reduce using rule 3 (expression -> NOT expression .)
    AND             reduce using rule 3 (expression -> NOT expression .)
    NOR             reduce using rule 3 (expression -> NOT expression .)
    OR              reduce using rule 3 (expression -> NOT expression .)
    NXOR            reduce using rule 3 (expression -> NOT expression .)
    XOR             reduce using rule 3 (expression -> NOT expression .)
    $end            reduce using rule 3 (expression -> NOT expression .)
    RPAREN          reduce using rule 3 (expression -> NOT expression .)
    RBRACE          reduce using rule 3 (expression -> NOT expression .)
    RBRACKET        reduce using rule 3 (expression -> NOT expression .)

  ! NAND            [ shift and go to state 13 ]
  ! AND             [ shift and go to state 14 ]
  ! NOR             [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! NXOR            [ shift and go to state 17 ]
  ! XOR             [ shift and go to state 18 ]


state 20

    (17) expression -> ID .

    NAND            reduce using rule 17 (expression -> ID .)
    AND             reduce using rule 17 (expression -> ID .)
    NOR             reduce using rule 17 (expression -> ID .)
    OR              reduce using rule 17 (expression -> ID .)
    NXOR            reduce using rule 17 (expression -> ID .)
    XOR             reduce using rule 17 (expression -> ID .)
    $end            reduce using rule 17 (expression -> ID .)
    RPAREN          reduce using rule 17 (expression -> ID .)
    RBRACE          reduce using rule 17 (expression -> ID .)
    RBRACKET        reduce using rule 17 (expression -> ID .)


state 21

    (10) expression -> LPAREN expression . RPAREN
    (4) expression -> expression . NAND expression
    (5) expression -> expression . AND expression
    (6) expression -> expression . NOR expression
    (7) expression -> expression . OR expression
    (8) expression -> expression . NXOR expression
    (9) expression -> expression . XOR expression
    (18) expression -> expression . AND
    (19) expression -> expression . OR
    (20) expression -> expression . XOR
    (21) expression -> expression . NAND
    (22) expression -> expression . NOR
    (23) expression -> expression . NXOR

    RPAREN          shift and go to state 31
    NAND            shift and go to state 13
    AND             shift and go to state 14
    NOR             shift and go to state 15
    OR              shift and go to state 16
    NXOR            shift and go to state 17
    XOR             shift and go to state 18


state 22

    (11) expression -> LBRACE expression . RBRACE
    (4) expression -> expression . NAND expression
    (5) expression -> expression . AND expression
    (6) expression -> expression . NOR expression
    (7) expression -> expression . OR expression
    (8) expression -> expression . NXOR expression
    (9) expression -> expression . XOR expression
    (18) expression -> expression . AND
    (19) expression -> expression . OR
    (20) expression -> expression . XOR
    (21) expression -> expression . NAND
    (22) expression -> expression . NOR
    (23) expression -> expression . NXOR

    RBRACE          shift and go to state 32
    NAND            shift and go to state 13
    AND             shift and go to state 14
    NOR             shift and go to state 15
    OR              shift and go to state 16
    NXOR            shift and go to state 17
    XOR             shift and go to state 18


state 23

    (12) expression -> LBRACKET expression . RBRACKET
    (4) expression -> expression . NAND expression
    (5) expression -> expression . AND expression
    (6) expression -> expression . NOR expression
    (7) expression -> expression . OR expression
    (8) expression -> expression . NXOR expression
    (9) expression -> expression . XOR expression
    (18) expression -> expression . AND
    (19) expression -> expression . OR
    (20) expression -> expression . XOR
    (21) expression -> expression . NAND
    (22) expression -> expression . NOR
    (23) expression -> expression . NXOR

    RBRACKET        shift and go to state 33
    NAND            shift and go to state 13
    AND             shift and go to state 14
    NOR             shift and go to state 15
    OR              shift and go to state 16
    NXOR            shift and go to state 17
    XOR             shift and go to state 18


state 24

    (1) statement -> ID EQUALS expression .
    (4) expression -> expression . NAND expression
    (5) expression -> expression . AND expression
    (6) expression -> expression . NOR expression
    (7) expression -> expression . OR expression
    (8) expression -> expression . NXOR expression
    (9) expression -> expression . XOR expression
    (18) expression -> expression . AND
    (19) expression -> expression . OR
    (20) expression -> expression . XOR
    (21) expression -> expression . NAND
    (22) expression -> expression . NOR
    (23) expression -> expression . NXOR

    $end            reduce using rule 1 (statement -> ID EQUALS expression .)
    NAND            shift and go to state 13
    AND             shift and go to state 14
    NOR             shift and go to state 15
    OR              shift and go to state 16
    NXOR            shift and go to state 17
    XOR             shift and go to state 18


state 25

    (4) expression -> expression NAND expression .
    (4) expression -> expression . NAND expression
    (5) expression -> expression . AND expression
    (6) expression -> expression . NOR expression
    (7) expression -> expression . OR expression
    (8) expression -> expression . NXOR expression
    (9) expression -> expression . XOR expression
    (18) expression -> expression . AND
    (19) expression -> expression . OR
    (20) expression -> expression . XOR
    (21) expression -> expression . NAND
    (22) expression -> expression . NOR
    (23) expression -> expression . NXOR

    NAND            reduce using rule 4 (expression -> expression NAND expression .)
    AND             reduce using rule 4 (expression -> expression NAND expression .)
    NOR             reduce using rule 4 (expression -> expression NAND expression .)
    OR              reduce using rule 4 (expression -> expression NAND expression .)
    NXOR            reduce using rule 4 (expression -> expression NAND expression .)
    XOR             reduce using rule 4 (expression -> expression NAND expression .)
    $end            reduce using rule 4 (expression -> expression NAND expression .)
    RPAREN          reduce using rule 4 (expression -> expression NAND expression .)
    RBRACE          reduce using rule 4 (expression -> expression NAND expression .)
    RBRACKET        reduce using rule 4 (expression -> expression NAND expression .)

  ! NAND            [ shift and go to state 13 ]
  ! AND             [ shift and go to state 14 ]
  ! NOR             [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! NXOR            [ shift and go to state 17 ]
  ! XOR             [ shift and go to state 18 ]


state 26

    (5) expression -> expression AND expression .
    (4) expression -> expression . NAND expression
    (5) expression -> expression . AND expression
    (6) expression -> expression . NOR expression
    (7) expression -> expression . OR expression
    (8) expression -> expression . NXOR expression
    (9) expression -> expression . XOR expression
    (18) expression -> expression . AND
    (19) expression -> expression . OR
    (20) expression -> expression . XOR
    (21) expression -> expression . NAND
    (22) expression -> expression . NOR
    (23) expression -> expression . NXOR

    NAND            reduce using rule 5 (expression -> expression AND expression .)
    AND             reduce using rule 5 (expression -> expression AND expression .)
    NOR             reduce using rule 5 (expression -> expression AND expression .)
    OR              reduce using rule 5 (expression -> expression AND expression .)
    NXOR            reduce using rule 5 (expression -> expression AND expression .)
    XOR             reduce using rule 5 (expression -> expression AND expression .)
    $end            reduce using rule 5 (expression -> expression AND expression .)
    RPAREN          reduce using rule 5 (expression -> expression AND expression .)
    RBRACE          reduce using rule 5 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 5 (expression -> expression AND expression .)

  ! NAND            [ shift and go to state 13 ]
  ! AND             [ shift and go to state 14 ]
  ! NOR             [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! NXOR            [ shift and go to state 17 ]
  ! XOR             [ shift and go to state 18 ]


state 27

    (6) expression -> expression NOR expression .
    (4) expression -> expression . NAND expression
    (5) expression -> expression . AND expression
    (6) expression -> expression . NOR expression
    (7) expression -> expression . OR expression
    (8) expression -> expression . NXOR expression
    (9) expression -> expression . XOR expression
    (18) expression -> expression . AND
    (19) expression -> expression . OR
    (20) expression -> expression . XOR
    (21) expression -> expression . NAND
    (22) expression -> expression . NOR
    (23) expression -> expression . NXOR

    NAND            reduce using rule 6 (expression -> expression NOR expression .)
    AND             reduce using rule 6 (expression -> expression NOR expression .)
    NOR             reduce using rule 6 (expression -> expression NOR expression .)
    OR              reduce using rule 6 (expression -> expression NOR expression .)
    NXOR            reduce using rule 6 (expression -> expression NOR expression .)
    XOR             reduce using rule 6 (expression -> expression NOR expression .)
    $end            reduce using rule 6 (expression -> expression NOR expression .)
    RPAREN          reduce using rule 6 (expression -> expression NOR expression .)
    RBRACE          reduce using rule 6 (expression -> expression NOR expression .)
    RBRACKET        reduce using rule 6 (expression -> expression NOR expression .)

  ! NAND            [ shift and go to state 13 ]
  ! AND             [ shift and go to state 14 ]
  ! NOR             [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! NXOR            [ shift and go to state 17 ]
  ! XOR             [ shift and go to state 18 ]


state 28

    (7) expression -> expression OR expression .
    (4) expression -> expression . NAND expression
    (5) expression -> expression . AND expression
    (6) expression -> expression . NOR expression
    (7) expression -> expression . OR expression
    (8) expression -> expression . NXOR expression
    (9) expression -> expression . XOR expression
    (18) expression -> expression . AND
    (19) expression -> expression . OR
    (20) expression -> expression . XOR
    (21) expression -> expression . NAND
    (22) expression -> expression . NOR
    (23) expression -> expression . NXOR

    NAND            reduce using rule 7 (expression -> expression OR expression .)
    AND             reduce using rule 7 (expression -> expression OR expression .)
    NOR             reduce using rule 7 (expression -> expression OR expression .)
    OR              reduce using rule 7 (expression -> expression OR expression .)
    NXOR            reduce using rule 7 (expression -> expression OR expression .)
    XOR             reduce using rule 7 (expression -> expression OR expression .)
    $end            reduce using rule 7 (expression -> expression OR expression .)
    RPAREN          reduce using rule 7 (expression -> expression OR expression .)
    RBRACE          reduce using rule 7 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 7 (expression -> expression OR expression .)

  ! NAND            [ shift and go to state 13 ]
  ! AND             [ shift and go to state 14 ]
  ! NOR             [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! NXOR            [ shift and go to state 17 ]
  ! XOR             [ shift and go to state 18 ]


state 29

    (8) expression -> expression NXOR expression .
    (4) expression -> expression . NAND expression
    (5) expression -> expression . AND expression
    (6) expression -> expression . NOR expression
    (7) expression -> expression . OR expression
    (8) expression -> expression . NXOR expression
    (9) expression -> expression . XOR expression
    (18) expression -> expression . AND
    (19) expression -> expression . OR
    (20) expression -> expression . XOR
    (21) expression -> expression . NAND
    (22) expression -> expression . NOR
    (23) expression -> expression . NXOR

    NAND            reduce using rule 8 (expression -> expression NXOR expression .)
    AND             reduce using rule 8 (expression -> expression NXOR expression .)
    NOR             reduce using rule 8 (expression -> expression NXOR expression .)
    OR              reduce using rule 8 (expression -> expression NXOR expression .)
    NXOR            reduce using rule 8 (expression -> expression NXOR expression .)
    XOR             reduce using rule 8 (expression -> expression NXOR expression .)
    $end            reduce using rule 8 (expression -> expression NXOR expression .)
    RPAREN          reduce using rule 8 (expression -> expression NXOR expression .)
    RBRACE          reduce using rule 8 (expression -> expression NXOR expression .)
    RBRACKET        reduce using rule 8 (expression -> expression NXOR expression .)

  ! NAND            [ shift and go to state 13 ]
  ! AND             [ shift and go to state 14 ]
  ! NOR             [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! NXOR            [ shift and go to state 17 ]
  ! XOR             [ shift and go to state 18 ]


state 30

    (9) expression -> expression XOR expression .
    (4) expression -> expression . NAND expression
    (5) expression -> expression . AND expression
    (6) expression -> expression . NOR expression
    (7) expression -> expression . OR expression
    (8) expression -> expression . NXOR expression
    (9) expression -> expression . XOR expression
    (18) expression -> expression . AND
    (19) expression -> expression . OR
    (20) expression -> expression . XOR
    (21) expression -> expression . NAND
    (22) expression -> expression . NOR
    (23) expression -> expression . NXOR

    NAND            reduce using rule 9 (expression -> expression XOR expression .)
    AND             reduce using rule 9 (expression -> expression XOR expression .)
    NOR             reduce using rule 9 (expression -> expression XOR expression .)
    OR              reduce using rule 9 (expression -> expression XOR expression .)
    NXOR            reduce using rule 9 (expression -> expression XOR expression .)
    XOR             reduce using rule 9 (expression -> expression XOR expression .)
    $end            reduce using rule 9 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 9 (expression -> expression XOR expression .)
    RBRACE          reduce using rule 9 (expression -> expression XOR expression .)
    RBRACKET        reduce using rule 9 (expression -> expression XOR expression .)

  ! NAND            [ shift and go to state 13 ]
  ! AND             [ shift and go to state 14 ]
  ! NOR             [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! NXOR            [ shift and go to state 17 ]
  ! XOR             [ shift and go to state 18 ]


state 31

    (10) expression -> LPAREN expression RPAREN .

    NAND            reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    NOR             reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    NXOR            reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 10 (expression -> LPAREN expression RPAREN .)


state 32

    (11) expression -> LBRACE expression RBRACE .

    NAND            reduce using rule 11 (expression -> LBRACE expression RBRACE .)
    AND             reduce using rule 11 (expression -> LBRACE expression RBRACE .)
    NOR             reduce using rule 11 (expression -> LBRACE expression RBRACE .)
    OR              reduce using rule 11 (expression -> LBRACE expression RBRACE .)
    NXOR            reduce using rule 11 (expression -> LBRACE expression RBRACE .)
    XOR             reduce using rule 11 (expression -> LBRACE expression RBRACE .)
    $end            reduce using rule 11 (expression -> LBRACE expression RBRACE .)
    RPAREN          reduce using rule 11 (expression -> LBRACE expression RBRACE .)
    RBRACE          reduce using rule 11 (expression -> LBRACE expression RBRACE .)
    RBRACKET        reduce using rule 11 (expression -> LBRACE expression RBRACE .)


state 33

    (12) expression -> LBRACKET expression RBRACKET .

    NAND            reduce using rule 12 (expression -> LBRACKET expression RBRACKET .)
    AND             reduce using rule 12 (expression -> LBRACKET expression RBRACKET .)
    NOR             reduce using rule 12 (expression -> LBRACKET expression RBRACKET .)
    OR              reduce using rule 12 (expression -> LBRACKET expression RBRACKET .)
    NXOR            reduce using rule 12 (expression -> LBRACKET expression RBRACKET .)
    XOR             reduce using rule 12 (expression -> LBRACKET expression RBRACKET .)
    $end            reduce using rule 12 (expression -> LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 12 (expression -> LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 12 (expression -> LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 12 (expression -> LBRACKET expression RBRACKET .)

